package day14;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Scanner;

public class MapEx01 {
	
	//멤버변수 자리 여기에 Map 생성
	//1. 첫번째형태
//	private HashMap<String, String> map = new HashMap<>();
	Scanner scan = new Scanner(System.in);
	private int size = 5; // 이렇게 쓰는거 비추.
	
	public static void main(String[] args) {
		//단어장 -> 메서드로 변경 (리턴을 무엇으로 할건지 중요)
		//입력 - 메서드, 출력 - 메인
		//
		// 단어를 입력받는 메서드 생성 -> Map사용, Map출력
		
		//1. 저장공간을 어디에다가 둘지..
			// - 1. 멤버변수 -> 공용변수로 있는 형태
			// - 2. main(여기다 만드는건 비추천) (외부메서드에서 매개변수로 받는 형태임) -> 매개변수로 받는 형태
			// - 3. 메서드내부에 생성 -> 리턴의 형태
		//2. 매개변수와 리턴타입, 메서드명을 결정 -> interface 생성
		
		//map이 static 아닌 인스턴스변수(메서드)라서 객체를 반드시 생성해야지만 접근가능.
		MapEx01 ex = new MapEx01(); // 
		
		
		//1번형태 멤버변수 형태 
//		ex.make();
		
		//2번 형태
		 HashMap<String, String> map = new HashMap<>();
		
		//3번 형태
//		make3(); // 에러가 난다 왜? static이 아니라서
//		HashMap<String, String> map1 = ex.make3(); // 리턴값 받아온다.
		
		
		//출력 (1번 메서드만 호출상태)
		Iterator<String> it = ex.map.keySet().iterator(); // 자료형 잊지말고 넣어주자.
		while(it.hasNext()) {
			String word = it.next(); // key값 반환
			String mean = ex.map.get(word); // Value값 반환 memo에서 직접호출
			System.out.println("단어 : "+word+" 의미 : "+mean);
		}
	
		
		
	}
	
	//메서드 자리 : 리턴타입, 매개변수, 메서드명을 결정
	//1. 멤버변수로 map이 있는 형태 (공용이기 때문에 리턴타입, 매개변수 없어도 됨)
	public void make() {
		while(map.size()<size) {
			System.out.println("단어:");
			String word = scan.next();
			System.out.println("의미:");
			String mean = scan.next();
			
			map.put(word, mean);
		}
		
	}
	
	//2. 외부에 map이 있는 형태(매개변수로 map을 가져오기)
	public void make2(HashMap<String, String>map) {
		while(map.size()<size) {
			System.out.println("단어:");
			String word = scan.next();
			System.out.println("의미:");
			String mean = scan.next();
			
			map.put(word, mean);
		}
	}
	
	//3. 메서드 내부에서 map 생성하는 형태 (리턴이 map인 형태)
	public HashMap<String, String> make3() {
		HashMap<String, String> map = new HashMap<String, String>();
//												↑ 리턴하는 값
		while(map.size()<size) {
			System.out.println("단어:");
			String word = scan.next();
			System.out.println("의미:");
			String mean = scan.next();
			
			map.put(word, mean);
		}
		
		return map; // 다 완성하고나서 return해줘야 한다.
	}
	
	
	
}
