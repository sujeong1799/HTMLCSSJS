package day11;

public class 다형성02 {

	public static void main(String[] args) {
		/* 다형성(polymorphism) : 하나의 코드가 여러 자료형으로 구현되어 실행되는 것
		 * 같은 코드에서 여러가지의 다른 생행결과를 얻을 수 있음
		 * 다형성을 잘 활용하면 유연하고, 정확성있는, 유지보수가 편리한 프로그램을 만들 수 있음.
		 * */
		
		Animal1 hAnimal = new Human();
		Animal1 tAnimal = new Panda();
		Animal1 eAnimal = new Eagle();

		다형성02 test = new 다형성02();
		test.moveAnimal(eAnimal);
		test.moveAnimal(tAnimal);
		test.moveAnimal(hAnimal);
		
		
		
	}
	
	//메서드 생성 
	// 다형성으로 출력이 가능한 기능
	public void moveAnimal(Animal1 animal) {
		animal.move();
	}

}

class Animal1{
	
	// 얘를 상속받는 클래스를 만들어볼게요
	public void move() {
		System.out.println("동물들이 움직입니다.");
	}
	
}

class Human extends Animal1{
	
	public void move() {
		System.out.println("사람은 터벅 터벅 걸어요.");
	}
	
	public void read() {
		System.out.println("사람이 공부를 합니다.");
	}
}

class Panda extends Animal1{
	public void move() {
		System.out.println("팬더가 어슬렁 거립니다.");
	}
	
	public void hunting() {
		System.out.println("팬더는 대나무를 사냥합니다.");
	}
}

class Eagle extends Animal1{
	public void move() {
		System.out.println("독수리는 하늘을 날아다닙니다.");
	}
	
	public void flying() {
		System.out.println("독수리는 하늘을 날아요.");
	}
}